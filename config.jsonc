{
  // 服务器监听 HTTP 请求的端口，默认为 80。
  "port": 23948,

  // 服务器监听 HTTPS 请求的端口，默认为 0（禁用）。如果要启用，请将其更改为 443。
  // 您无需提供证书，服务器使用 ACME 协议从 Let's Encrypt 获取免费证书。
  // 注意：如果您在 Docker 容器中运行服务器，需要暴露端口 `443:443`。
  "tlsPort": 0,

  // 允许的 CORS 源，默认为允许所有源。
  // 注意：有效的源必须是有效的 URL，包括协议、域名和端口。例如："https://example.com"。
  "corsAllowOrigins": [],

  // 最大并发构建进程数，默认为 CPU 核心数。
  "buildConcurrency": 0,

  // 传入请求等待构建进程完成的时间，默认为 30 秒。
  "buildWaitTime": 30,

  // 使用 gzip/brotli 压缩 HTTP 响应体，默认为 true。
  "compress": true,

  // 压缩构建后的 js/css 文件，默认为 true。
  "minify": true,

  // 为构建后的 js/css 文件生成源映射，默认为 true。
  "sourceMap": true,

  // 存储选项。
  // 示例：
  // - 使用本地文件系统作为存储：
  //   "storage": {
  //     "type": "fs",
  //     "endpoint": "/path/to/storage"
  //   }
  // - 使用兼容 S3 的存储：
  //   "storage": {
  //     "type": "s3",
  //     "endpoint": "https://bucket.s3.amazonaws.com",
  //     "region": "us-west-1",
  //     "accessKeyID": "***",
  //     "secretAccessKey": "***"
  //   }
  "storage": {
    // 存储类型，支持的类型为 ["fs", "s3"]，默认为 "fs"。
    "type": "fs",
    // 存储端点，默认为 "~/.esmd/storage"。
    "endpoint": "~/.esmd/storage",
    // S3 存储区域。
    "region": "",
    // S3 存储访问密钥 ID。
    "accessKeyID": "",
    // S3 存储秘密访问密钥。
    "secretAccessKey": ""
  },

  // 在存储中缓存包原始文件，默认为 false。
  // 服务器会定期清理 npm 存储，为了避免在访问包原始文件时进行不必要的安装，您可以启用此选项以在存储中缓存包原始文件。
  // 注意：此选项会增加存储使用量，建议在使用兼容 S3 的存储时启用。
  "cacheRawFile": false,

  // 自定义着陆页选项，默认为空。
  // 如果提供了 `origin` 服务器，服务器将把 `/` 请求代理到该服务器。
  // 如果您的自定义着陆页有自己的资产，还需要在 `assets` 字段中提供这些资产的路径。
  "customLandingPage":  {
    "origin": "https://example.com",
    "assets": [
      "/favicon.ico",
      "/assets/app.js",
      "/assets/app.css"
    ]
  },

  // 构建系统的工作目录，默认为 "~/.esmd"。
  "workDir": "~/.esmd",

  // 日志目录，默认为 "~/.esmd/log"。
  "logDir": "~/.esmd/log",

  // 日志级别，可用值为 ["debug", "info", "warn", "error"]，默认为 "info"。
  "logLevel": "info",

  // 启用访问日志，默认为禁用。
  // 访问日志将写入日志目录，文件名为 "access-<date>.log"。
  "accessLog": false,

  // npm 包查询的缓存 TTL，默认为 600 秒（10 分钟）。
  "npmQueryCacheTTL": 600,

  // 全局 npm 注册表，默认为 "https://registry.npmjs.org/"。
  "npmRegistry": "https://registry.npmjs.org/",

  // 全局 npm 注册表的 npm 访问令牌，默认为空。
  "npmToken": "",

  // 这两个字段用于对全局 npm 注册表进行基本身份验证，
  // 两者的默认值均为空。
  "npmUser": "",
  "npmPassword": "",

  // 作用域包的注册表。这将确保具有这些作用域的包从特定注册表下载，默认为空。
  "npmScopedRegistries": {
    "@scope_name": {
      "registry": "https://your-registry.com/",
      "token": "",
      "user": "",
      "password": ""
    }
  },

  // 仅允许某些包或作用域的列表，默认为允许所有。
  "allowList": {
    "packages": ["@scope_name/package_name"],
    "scopes": [{
      "name": "@scope_name"
    }]
  },

  // 禁止某些包或作用域的列表，默认为无禁止。
  "banList": {
    "packages": ["@scope_name/package_name"],
    "scopes": [{
      "name": "@scope_name",
      "excludes": ["package_name"]
    }]
  }
}
